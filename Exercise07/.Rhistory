# install.packages("tidyverse")
library(tidyverse)
# install.packages("rvest")
library(rvest)
# install.packages("tidyverse")
library(tidyverse)
# install.packages("rvest")
library(rvest)
# install.packages("tidyverse")
library(tidyverse)
# install.packages("rvest")
library(rvest)
url = 'https://bit.ly/3gZKFve'
df_us_contry <- read.csv(url)
View(df_us_contry)
url = 'https://bit.ly/3gZKFve'
df_us_contry <- read.csv(url)
url1 = 'https://bit.ly/30dEWLB'
df_us_state = read.csv(url1)
View(df_us_contry)
df_us_contry %>%
group_by(date) %>%
summarise(total_cases = sum(cases)) %>%
ggplot(mapping = aes(x = date, y = total_cases)) +
geom_point() +
geom_smooth(se = FALSE)
df_us_contry %>%
group_by(date) %>%
summarise(total_cases = sum(cases)) %>%
ggplot(mapping = aes(x = date, y = total_cases)) +
geon_line()
df_us_contry %>%
group_by(date) %>%
summarise(total_cases = sum(cases)) %>%
ggplot(mapping = aes(x = date, y = total_cases)) +
geom_point()
df_us_contry %>%
group_by(date) %>%
summarise(total_cases = sum(cases)) %>%
ggplot(mapping = aes(x = date, y = total_cases)) +
geom_point()
View(df_us_state)
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases))%>%
ggplot(mpg, aes(state)) +
geom_bar()
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases))%>%
ggplot(total_cases, aes(state)) +
geom_bar()
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
ggplot(total_cases, aes(state)) +
geom_bar()
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases))
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head()
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10)
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10) %>%
ggplot(total_cases, aes(state)) +
geom_bar()
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10) %>%
ggplot(mapping = aes(x = state, y = total_cases)) +
geom_bar()
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10)
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10) %>%
ggplot(total_cases)
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10) %>%
ggplot(state)
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10) %>%
ggplot()
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10) %>%
ggplot() +  geom_bar(aes(y = state))
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state))
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(10) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
View(df_us_state)
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(20) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
sort() %>%
head(20) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
sort(total_cases) %>%
head(20) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
head(20) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
order(total_cases)%>%
head(20) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
order()%>%
head(20) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(total_cases)%>%
head(20) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(desc(total_cases))%>%
head(20) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(desc(total_cases))%>%
head(20) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(desc(total_cases))%>%
head(20) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(desc(total_cases))%>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(desc(total_cases))%>%
head(15) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(total_cases)%>%
head(15) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(desc(total_cases),state)%>%
head(15) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(desc(total_cases),state)%>%
head(3) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(desc(total_cases),state)%>%
head(15) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_contry %>%
group_by(date) %>%
summarise(total_cases = sum(cases)) %>%
ggplot(mapping = aes(x = date, y = total_cases)) +
geom_smooth()
df_us_contry %>%
group_by(date) %>%
summarise(total_cases = sum(cases)) %>%
ggplot() +
geom_smooth(aes(x = date, y = total_cases))
df_us_contry %>%
group_by(date) %>%
summarise(total_cases = sum(cases)) %>%
ggplot() +
geom_smooth(mapping = aes(x = date, y = total_cases))
df_us_contry %>%
group_by(date) %>%
summarise(total_cases = sum(cases)) %>%
ggplot(mapping = aes(x = date, y = total_cases)) +
geom_line(linetype = "dashed")+
geom_point()
df_us_contry %>%
group_by(date) %>%
summarise(total_cases = sum(cases)) %>%
ggplot(aes(x = date, y = total_cases)) +
geom_line(linetype = "dashed")+
geom_point()
df_us_contry %>%
group_by(date) %>%
summarise(total_cases = sum(cases)) %>%
ggplot(aes(x = date, y = total_cases)) +
geom_line(linetype = "dashed")+
geom_point()
View(df_us_contry)
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = date, y = total_deaths)) +
geom_line(linetype = "dashed")+
geom_point()
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = date, y = total_deaths, group=1)) +
geom_line(linetype = "dashed")+
geom_point()
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = date, y = total_deaths, group=1)) +
geom_line(linetype = "dashed")
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = date, y = total_deaths, group=1)) +
geom_line()
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = date, y = total_deaths)) +
geom_line()
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = date, y = total_deaths, group=1)) +
geom_line()
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = date, y = total_deaths, group=1)) +
geom_line() +
xlab("")
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = date, y = total_deaths, group=1)) +
geom_line() +
xlab("")
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = date, y = total_deaths, group=1)) +
geom_line() +scale_x_date(date_labels = "%b")
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = as.Date(date), y = total_deaths, group=1)) +
geom_line() +scale_x_date(date_labels = "%b")
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = as.Date(date), y = total_deaths, group=1)) +
geom_line() +scale_x_date(date_labels = "%m-%Y")
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read.table(url2)
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
View(df_wiki)
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
foreignreserve <- df_wiki %>%
html_nodes(xpath='//*/div/table[@class = "wikitable sortable jquery-tablesorter"]') %>%
html_table()
View(foreignreserve)
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
foreignreserve <- df_wiki %>%
html_nodes(xpath='//*/div/table') %>%
html_table()
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
foreignreserve <- df_wiki %>%
html_nodes(xpath='//*/div/table[1]') %>%
html_table()
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
foreignreserve <- df_wiki %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div/table[1]') %>%
html_table()
View(foreignreserve)
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
foreignreserve <- df_wiki %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div/table[1]') %>%
html_table()
fores = foreignreserve[[1]]
names(fores) <- c("Rank", "Country", "Forexres", "Date", "Change")
head(fores)
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
foreignreserve <- df_wiki %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div/table[1]') %>%
html_table()
fores = foreignreserve[[1]]
names(fores) <- c("Rank", "Country", "Forexres", "Date", "Change",'Per capita','% of GDP')
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
foreignreserve <- df_wiki %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div/table[1]') %>%
html_table()
fores = foreignreserve[[1]]
names(fores) <- c("Rank", "Country", "Forexres", "Date", "Change",'Per capita')
head(fores)
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
wiki_table <- df_wiki %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div/table[1]') %>%
html_table()
my_table = wiki_table[[1]]
names(my_table) <- c("Rank", "Country", "Forexres", "Date", "Per capita",'% of GDP')
head(my_table)
# Remove trailing notes in Date variable
library(stringr)
my_table$newdate = str_split_fixed(fores$Date, "\\[", n = 2)[, 1]
head(my_table)
# Remove trailing notes in Date variable
library(stringr)
my_table$newdate = str_split_fixed(fores$Date, "\\[", n = 2)[, 1]
my_table$`Per capita` = str_split_fixed(my_table$`Per capita`, "\s+")[, 1]
# Remove trailing notes in Date variable
library(stringr)
my_table$newdate = str_split_fixed(fores$Date, "\\[", n = 2)[, 1]
my_table$`Per capita` = str_split_fixed(my_table$`Per capita`, "\\s+")[, 1]
# Remove trailing notes in Date variable
library(stringr)
my_table$newdate = str_split_fixed(fores$Date, "\\[", n = 2)[, 1]
my_table$`Per capita` = str_split_fixed(my_table$`Per capita`, "s+")[, 1]
# Remove trailing notes in Date variable
library(stringr)
my_table$newdate = str_split_fixed(fores$Date, "\\[", n = 2)[, 1]
my_table$`Per capita` = str_split_fixed(my_table$`Per capita`, "\s+", n = 2)[, 1]
# Remove trailing notes in Date variable
library(stringr)
my_table$Date <-  str_split_fixed(fores$Date, "\\[", n = 2)[, 1]
my_table$`Per capita` <- gsub(",", "", my_table$`Per capita`)
head(my_table)
my_table %>%
filter( %in% c('Forexres', '% of GDP','Per capita'))
my_table %>%
filter( c('Forexres', '% of GDP','Per capita'))
# install.packages("tidyverse")
library(tidyverse)
# install.packages("rvest")
library(rvest)
url = 'https://bit.ly/3gZKFve'
df_us_contry <- read.csv(url)
url1 = 'https://bit.ly/30dEWLB'
df_us_state = read.csv(url1)
df_us_state %>%
group_by(state) %>%
summarise(total_cases = sum(cases)) %>%
arrange(desc(total_cases),state)%>%
head(15) %>%
ggplot() +  geom_bar(aes(x = total_cases, y = state),stat='identity')
df_us_contry %>%
group_by(date) %>%
summarise(total_deaths = sum(deaths)) %>%
ggplot(aes(x = as.Date(date), y = total_deaths, group=1)) +
geom_line() +scale_x_date(date_labels = "%m-%Y")
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
wiki_table <- df_wiki %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div/table[1]') %>%
html_table()
my_table = wiki_table[[1]]
names(my_table) <- c("Rank", "Country", "External debt", "Date", "Per capita",'% of GDP')
head(my_table)
# Remove trailing notes in Date variable
library(stringr)
my_table$Date <-  str_split_fixed(my_table$Date, "\\[", n = 2)[, 1]
my_table$`Per capita` <- gsub(",", "", my_table$`Per capita`)
head(my_table)
my_table %>%
filter( c('Forexres', '% of GDP','Per capita'))
as.numeric(my_table$`External debt`)
2.5412714×10^13
2.5412714*10^13
as.numeric('10^13	')
as.numeric('10^13')
as.formula('10^13')
as.numeric('2.541271e+13')
gsub("×10^", "e+",my_table)
gsub("×10^", "e+",my_table$`External debt`)
my_table$`External debt`[1]
gsub("×10^", "e+",my_table$`External debt`[1])
gsub("×10\^", "e\+",my_table$`External debt`[1])
gsub("×10^", "e\+",my_table$`External debt`[1])
gsub("×10^", "e+",my_table$`External debt`[1])
str_replace("×10^", "e+",my_table$`External debt`[1])
str_replace(my_table$`External debt`[1],"×10^", "e+")
str_replace(my_table$`External debt`[1],"×10^", "e+")
str_replace(my_table$`External debt`[1],"×10", "e+")
str_replace(my_table$`External debt`[1],"×10\^", "e+")
str_replace(my_table$`External debt`[1],"×10\\^", "e+")
str_replace(my_table$`External debt`,"×10\\^", "e+")
as.numeric(str_replace(my_table$`External debt`,"×10\\^", "e+"))
str_replace(my_table$`External debt`,"×10\\^", "e+")
gsub(",", "", my_table$`External debt`)
as.numeric(str_replace(my_table$`External debt`,"×10\\^", "e+"))
gsub(",", "", my_table$`External debt`)
my_table$`External debt` <- gsub(",", "", my_table$`External debt`)
as.numeric(str_replace(my_table$`External debt`,"×10\\^", "e+"))
url2 = 'https://bit.ly/2DCvmdt'
df_wiki <- read_html(url2)
wiki_table <- df_wiki %>%
html_nodes(xpath='//*[@id="mw-content-text"]/div/table[1]') %>%
html_table()
my_table = wiki_table[[1]]
names(my_table) <- c("Rank", "Country", "External debt", "Date", "Per capita",'% of GDP')
head(my_table)
# Remove trailing notes in Date variable
library(stringr)
my_table$Date <-  str_split_fixed(my_table$Date, "\\[", n = 2)[, 1]
my_table$`Per capita` <- gsub(",", "", my_table$`Per capita`)
head(my_table)
my_table$`External debt` <- gsub(",", "", my_table$`External debt`)
my_table$`External debt` <-as.numeric(str_replace(my_table$`External debt`,"×10\\^", "e+"))
my_table$`Per capita` <- as.numeric(my_table$`Per capita`)
my_table$`% of GDP` <- as.numeric(my_table$`% of GDP`)
head(my_table)
my_table$`External debt` <- gsub(",", "", my_table$`External debt`)
my_table$`External debt` <-as.numeric(str_replace(my_table$`External debt`,"×10\\^", "e+"))
my_table$`Per capita` <- as.numeric(my_table$`Per capita`)
my_table$`% of GDP` <- as.numeric(my_table$`% of GDP`)
head(my_table)
as.Date(my_table$Date)
as.Date(my_table$Date,format = "%b %Y")
as.Date(my_table$Date,format = "%B %Y")
as.Date(my_table$Date,format = "%d %B %Y")
my_table$Date <- as.Date(my_table$Date,format = "%d %B %Y")
head(my_table)
